import Recipe, {RecipeResults} from "../../types/Recipe/recipe-type";
import {getRecipeById,getAllRecipeWithIds} from "../../lib/Recipe/recipe-lib";
import stylesHp from '../../styles/Homepage/Homepage.module.css';
import Head from 'next/head'
import {getHomepageById} from "../../lib/Homepage/homepage-lib";
import { HOMEPAGE_ID } from "../../lib/Common/constants";
import Homepage from "../../types/Homepage/homepage-type";
import HeaderComponent from "../../components/Homepage/header-component";
import FooterComponent from "../../components/Homepage/footer-component";
import { richTextProfile } from "../../lib/Common/richTextConfiguration";
import { generateHTML } from "@tiptap/html";
import Image from 'next/image'
import HeroBanner from "../../components/Homepage/hero-banner";

const Renderer = require("prosemirror-to-html-js").Renderer;


type Params = {
    params: {
       slug: string;
    };
  };

  export async function getStaticProps({ params }: Params) {
    const recipe = await getRecipeById(params.slug); 
    const homepage = await getHomepageById(HOMEPAGE_ID);   
  
    return {
        props: {recipe,homepage},
      // Next.js will attempt to re-generate the page:
      // - When a request comes in
      // - At most once every 10 seconds
      revalidate: 10, //in seconds
    };
  }
  
  export async function getStaticPaths() {
    const allRecipePosts = await getAllRecipeWithIds();

    return {
      paths: allRecipePosts.map(({ id }) => `/recipes/${id}`) ?? [],
      fallback: true,
    };
  }
  type Props = {
    recipe: Recipe;
    homepage: Homepage;
  };

const Post = ({recipe,homepage}: Props) => {
    
    const output = generateHTML(recipe?.preparationDescriptionRt,[richTextProfile]);

    return (
        <div className={stylesHp.container}>
            <Head>
                <title>{recipe?.Title}</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main className={stylesHp.main}>
                <HeaderComponent 
                    allHeaders={homepage.header}
                />
                <HeroBanner 
                  heroImageUrl={recipe?.ImageList?.results[0].fileUrl}
                  altText=''
                />
                
                <div className={stylesHp.boxedContainer} >
                    <h1>{recipe?.Title}</h1>
                    <p>
                      <strong>Duration:</strong> {recipe?.Duration} min.<br/>
                    </p>
                    <p>
                      <strong>Ingredients:</strong> {recipe?.Ingredients}
                    </p>

                    <p dangerouslySetInnerHTML={{ __html: output }} />
                </div>
                <FooterComponent
                    allFooters={homepage.footer}
                />
                
            </main>
        </div>
    )
};
export default Post;